version: "3"

services:
  fakeapserver:
    build:
      context: .
      dockerfile: Dockerfile-fakeapserver
      args:
        - AP_API_KEY
    ports:
      # The admin pane will be exposed on the host machine at
      # http://localhost:8002/elections/2016/ap-deja-vu/
      - "8002:8002"

  database:
    image: "postgres:10"
    environment:
      - POSTGRES_USER=elections18
    ports:
      - "5433:5432"

  bootstrap_db:
    depends_on:
      - database
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: "fab --fabfile=/opt/elections18/fabfile data.bootstrap_db"
    volumes:
      - .:/opt/elections18
    environment:
      - elections18_POSTGRES_HOST=database
      - AP_API_KEY

  daemon:
    depends_on:
      - database
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: "fab --fabfile=/opt/elections18/fabfile daemons.main"
    volumes:
      - .:/opt/elections18
      # This allows rendered data to be shared with the front-end repo
      - ../elections18-graphics:/opt/elections18-graphics
      # Share your local Google OAuth cookie, to allow Google Sheet access
      - ~/.google_oauth_credentials:/root/.google_oauth_credentials
    environment:
      # Comment out the `AP_API_BASE_URL` line to use the actual AP server
      # - AP_API_BASE_URL=http://fakeapserver:8002/elections/2016/ap-deja-vu
      - elections18_POSTGRES_HOST=database
      - AP_API_KEY
      # Allow Google OAuth cookie to be refreshed
      - GOOGLE_OAUTH_CLIENT_ID
      - GOOGLE_OAUTH_CONSUMER_SECRET

  app:
    depends_on:
      - database
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: "fab --fabfile=/opt/elections18/fabfile app:8001"
    ports:
      # The admin pane will be exposed on the host machine at
      # http://localhost:8001/elections18/calls/senate/
      # (or altered for other office types)
      - "8001:8001"
    volumes:
      - .:/opt/elections18
    environment:
      - elections18_POSTGRES_HOST=database
